language: cpp

branches:
  only:
    - master
    - latest
    - release
    - coverity_scan

before_script:
  - if [[ -n "$DB" && -f /etc/odbcinst.ini ]]; then export ODBCSYSINI=/etc; fi
  - if [[ -n "$DB" && -f /etc/odbc.ini ]]; then export ODBCINI=/etc/odbc.ini; fi
  - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then sudo odbcinst -i -d -f /usr/share/libmyodbc/odbcinst.ini; fi
  - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then mysql -e "DROP DATABASE IF EXISTS nanodbc_tests; CREATE DATABASE IF NOT EXISTS nanodbc_tests;" -uroot; fi
  - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost';" -uroot; fi
  - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then export NANODBC_TEST_CONNSTR="Driver=MySQL;Server=localhost;Database=nanodbc_tests;User=root;Password=;Option=3;"; fi
  - if [[ "$DB" == "postgresql" ]]; then sudo odbcinst -i -d -f /usr/share/psqlodbc/odbcinst.ini.template; fi
  - if [[ "$DB" == "postgresql" ]]; then psql -c "CREATE DATABASE nanodbc_tests;" -U postgres; fi
  - if [[ "$DB" == "postgresql" ]]; then export NANODBC_TEST_CONNSTR="DRIVER={PostgreSQL ANSI};Server=localhost;Port=5432;Database=nanodbc_tests;UID=postgres;"; fi
  - if [[ "$DB" == "sqlite" ]]; then sudo odbcinst -i -d -f /usr/share/sqliteodbc/unixodbc.ini; fi
  - odbcinst -j
  - if [[ -n "$DB" && -f "$ODBCSYSINI/odbcinst.ini" ]]; then odbcinst -q -d; fi
  - if [[ -n "$DB" && -s "$ODBCINI" ]]; then odbcinst -q -s; fi
  - export CXX="g++-5"

script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=${CBT} -DNANODBC_USE_UNICODE=${USE_UNICODE} -DNANODBC_USE_BOOST_CONVERT=${USE_BOOST_CONVERT} -DNANODBC_ENABLE_LIBCXX=NO ..
  - make
  - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then make VERBOSE=1 mysql_check; fi
  - if [[ "$DB" == "postgresql" ]]; then make VERBOSE=1 postgresql_check; fi
  - if [[ "$DB" == "sqlite" ]]; then make VERBOSE=1 sqlite_check; fi

matrix:
  include:
    - env: DB=sqlite USE_UNICODE=OFF USE_BOOST_CONVERT=OFF CBT=Debug
      compiler: gcc
      addons: &sqlite
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-5
            - libboost-locale1.55-dev
            - unixodbc
            - unixodbc-dev
            - libsqliteodbc
    - env: DB=sqlite USE_UNICODE=OFF USE_BOOST_CONVERT=ON CBT=Release
      compiler: gcc
      addons: *sqlite
    - env: DB=mysql USE_UNICODE=OFF USE_BOOST_CONVERT=OFF CBT=Release
      compiler: gcc
      addons: &mysql
        mysql: "5.5"
        apt:
          sources: *sources
          packages:
            - g++-5
            - libboost-locale1.55-dev
            - unixodbc
            - unixodbc-dev
            - libmyodbc
            - mysql-client
    - env: DB=mysql USE_UNICODE=OFF USE_BOOST_CONVERT=ON CBT=Release
      compiler: gcc
      addons: *mysql
    - env: DB=mysql USE_UNICODE=ON USE_BOOST_CONVERT=OFF CBT=Release
      compiler: gcc
      addons: *mysql
    - env: DB=mysql USE_UNICODE=ON USE_BOOST_CONVERT=ON CBT=Release
      compiler: gcc
      addons: *mysql
    - env: DB=postgresql USE_UNICODE=OFF USE_BOOST_CONVERT=OFF CBT=Release
      compiler: gcc
      addons: &postgresql
        postgresql: "9.1"
        apt:
          sources: *sources
          packages:
            - g++-5
            - libboost-locale1.55-dev
            - unixodbc
            - unixodbc-dev
            - odbc-postgresql
    - env: DB=mariadb USE_UNICODE=OFF USE_BOOST_CONVERT=OFF CBT=Release
      compiler: gcc
      addons:
        mariadb: "10.0"
        apt:
          sources: *sources
          packages:
            - g++-5
            - libboost-locale1.55-dev
            - unixodbc
            - unixodbc-dev
            - libmyodbc
  allow_failures:
    - env: DB=mariadb USE_UNICODE=OFF USE_BOOST_CONVERT=OFF CBT=Release
